name: Release

on:
  push:
    branches:
      - 'master'

env:
    project: "src/EnterpriseIntegration"
    rabbitmq_project: "src/EnterpriseIntegration.RabbitMQ"
    kafka_project: "src/EnterpriseIntegration.Kafka"
    latest_dotnet_version: "7.x"

jobs:
  release_github:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
            fetch-depth: '0'
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
            versionSpec: '5.x'
      - name: Determine Version
        id: semver
        uses: gittools/actions/gitversion/execute@v0.9.7
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.semver.outputs.semVer }}"
          release_name: "Release ${{ steps.semver.outputs.semVer }}"
          draft: false
          prerelease: false

  release:
    name: Create NuGET Package (Core)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
            fetch-depth: '0'
      - name: Setup .NET Core SDK ${{ env.latest_dotnet_version }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.latest_dotnet_version }}
      - name: Install dependencies
        run: dotnet restore $project
      - name: Build
        run: dotnet build $project --no-restore --configuration Release
      - name: Create nuget package
        run: dotnet pack --configuration Release $project
      - name: Publish package to nuget.org
        run: dotnet nuget push $project/bin/Release/*.nupkg -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}

  release_rabbitmq:
    name: Create NuGET Package (RabbitMQ)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
            fetch-depth: '0'
      - name: Setup .NET Core SDK ${{ env.latest_dotnet_version }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.latest_dotnet_version }}
      - name: Install dependencies
        run: dotnet restore $rabbitmq_project
      - name: Build
        run: dotnet build $rabbitmq_project --no-restore --configuration Release
      - name: Create nuget package
        run: dotnet pack --configuration Release $rabbitmq_project
      - name: Publish the package to nuget.org
        run: dotnet nuget push $rabbitmq_project/bin/Release/*.nupkg -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}

  release_kafka:
    name: Create NuGET Package (Kafka)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
            fetch-depth: '0'
      - name: Setup .NET Core SDK ${{ env.latest_dotnet_version }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.latest_dotnet_version }}
      - name: Install dependencies
        run: dotnet restore $kafka_project
      - name: Build
        run: dotnet build $kafka_project --no-restore --configuration Release
      - name: Create nuget package
        run: dotnet pack --configuration Release $kafka_project
      - name: Publish the package to nuget.org
        run: dotnet nuget push $kafka_project/bin/Release/*.nupkg -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}
